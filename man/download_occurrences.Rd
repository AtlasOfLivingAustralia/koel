% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_occurrences.R
\name{download_occurrences}
\alias{download_occurrences}
\title{Download species occurrence media and accompanying data}
\usage{
download_occurrences(occ_list, cache_path)
}
\arguments{
\item{occ_list}{A data.frame or tibble as produced by `filter_occurrences()`
or otherwise. Must contain a `multimedia` column even if this column is
all `NA`s. Should also contain, at minimum, columns as provided from
initial species lists (i.e. `correct_name`, `provided_name`, `state`,
`lga`, `shape`), and a unique `recordID` column as produced by
`atlas_occurrences()`.}

\item{cache_path}{A character string specifying the (temporary) cache
directory to save downloaded media files for each occurrence, and the
downloaded occurrence data. The string must end in `"/"`. The path must
describe an existing directory, and if no 'species_images' folder exists
within this directory then one will be created, in which the media output
will be saved.}
}
\value{
A tibble containing provided data for each occurrence record in
   `occ_list`, along with media data for each record including a
   `download_path` column to the stored media files. Contains __ ALA-specific
   columns with data regarding taxonomy, location, record and media data, 7
   user-supplied columns from `species_list`, a column denoting the list that
   record is matched to, and a column indicating the Australian state/
   territory of the location.
}
\description{
This function performs media searches and downloads of species records found
   with `search_occurrences()` and filtered with `filter_occurrences()`. The
   first media image is downloaded for each record, and a dataframe
   containing the provided data joined to individual image data is produced.
}
\details{
A temporary copy of the produced dataframe is stored in the provided
   directory, as are the relevant media files (one per occurrence). Within
   the `cache_path`, images are stored in a `species_images` directory that
   is created if it does not already exist.
}
