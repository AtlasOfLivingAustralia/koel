% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_email.R
\name{build_email_large}
\alias{build_email_large}
\title{This function is identical in every regard to `build_email()` with the
   exception that it will split emails into multiple emails if a list has too
   many records for a single email. It compiles the downloaded ALA species
   occurrences into an informative table for each biosecurity list, and
   facilitates the sending of emails containing these tables to relevant
   addressees. It uses helper (internal and external) functions to format and
   compile necessary map images, format the table, and send the emails. There
   is no outputted value of this function, however it provides the option to
   save .html and .csv files to local or temporary directories.}
\usage{
build_email_large(
  alerts_data,
  cache_path,
  records_threshold = 30,
  records_per_email = 20,
  template_path = NULL,
  output_path = NULL,
  email_list = data.frame(email = character(), list = character()),
  email_subject = "ALA Biosecurity Alert",
  email_send = NA,
  email_password = NA,
  email_host = NA,
  email_port = NA,
  test = TRUE
)
}
\arguments{
\item{alerts_data}{A data.frame ideally produced by `download_occurrences()`.
Each row contains ALA data pertaining to a single species occurrence record
downloaded with galah. Should contain 8 default columns.}

\item{cache_path}{A single string containing the path to the temporary
cache folder in which species images and maps are saved.  Must begin with
`"./"` and end  with `"/"`. Should contain a `species_images` and a `maps`
directory, however these will be created if they do not exist.}

\item{records_threshold}{A (positive) numeric value indicating the minimum
number of records on a single list to trigger the splitting of the list's
records into multiple emails. Defaults to 30.}

\item{records_per_email}{A (positive) numeric value indicating how many
records to include per email for a list if its total number of records
exceed `records_threshold`. Defaults to 20 records per email.}

\item{template_path}{A single string containing the path to the R
markdown template to be rendered with the html table produced by
`build_gt_table()`. Defaults to NULL which triggers the use of a minimal
.Rmd file to render the produced table. Markdown file must use object
`table_df`.}

\item{output_path}{An optional single string containing the path to the
permanent directory in which the produced .html and .csv files are saved
for record-keeping purposes. Default value is `NULL`, and files are only
saved if a file path is provided instead. Must begin with `"./"` and end
with `"/"`. Should contain a 'html' and a 'csv' directory, however these
will be created if they do not exist.}

\item{email_list}{A data.frame of email details for each list. Should
contain at least two columns, one named `email` containing email addresses,
and one named `list` containing the lists each email is associated with.
Defaults to an empty dataframe with these columns. Emails provided with
`"universal"` in the `list` column receive emails for all lists}

\item{email_subject}{An optional single string of the subject of the email.
If not provided, default subject is "ALA Biosecurity Alerts".}

\item{email_send}{A single string providing the email address from which
the alerts are to be sent. Deafults to `NA`.}

\item{email_password}{A single string providing the password for the
provided email address (`email_send` argument). Defaults to `NA`.}

\item{email_host}{A single string providing the email server host to be
fed to the {emayili} function `server()`. Defaults to `NA`.}

\item{email_port}{A single numeric value providing the email server port to be
fed to the {emayili} function `server()`. Defaults to `NA`.}

\item{test}{A logical argument which indicates whether the email should be
sent as a test email (TRUE) or as an official email (FALSE). If the email
is a test then it is not addressed to the sending email address. Defaults
to `TRUE`.}
}
\description{
This function is identical in every regard to `build_email()` with the
   exception that it will split emails into multiple emails if a list has too
   many records for a single email. It compiles the downloaded ALA species
   occurrences into an informative table for each biosecurity list, and
   facilitates the sending of emails containing these tables to relevant
   addressees. It uses helper (internal and external) functions to format and
   compile necessary map images, format the table, and send the emails. There
   is no outputted value of this function, however it provides the option to
   save .html and .csv files to local or temporary directories.
}
